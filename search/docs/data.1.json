[{"id":4,"url":"/doc/ros2/Contact/","title":"Contact us","content":"\nContact us¶\nIf you try out ROS 2 and have feedback or questions, please get in touch with us.\n\nGeneral/design discussion¶\nDiscussions about ROS 2 development and plans are happening on the “Next Generation ROS” Discourse category (previously on the sig-ng-ros (Special Interest Group on Next-Generation ROS) mailing list).\nJoin us there and participate in the conversation.\nIf you’d like to contact us privately (e.g., if your question contains information sensitive to your organization or project), you can email us directly at ros@osrfoundation.org.\n\n\nTroubleshooting¶\nIf you need help with troubleshooting your system, please first check ROS Answers to see if others have come across similar issues, otherwise ask a new questions on ROS Answers making sure to include at least the ros2 tag and the rosdistro version you are running, e.g. ardent.\n\n\nOpening issues¶\nIf you identify bugs, you can open an issue to notify the ROS team.\nBefore opening an issue, check if other users have reported similar issues by searching across the ros2 and ament Github organizations: example search query.\nIf it has not been reported, feel free to open an issue in the appropriate repository tracker.\nIf it’s not clear which tracker to use for a particular issue, file it in the ros2/ros2 repository and we’ll have a look at it.\nWhen filing an issue, please make sure to:\n\nInclude enough information for another person to understand the issue.\nInclude information about the exact platform, software, versions, and environment relevant to the problem. This includes how you installed the software (from binaries or from source) and which ROS middleware/DDS vendor you are using (if you know it).\nIn case of a bug consider providing a short, self contained, correct (compilable), example.\n\nPull requests are welcome for any of the ros2 repositories to suggest specific code changes!\nSee Contributing for more details on how to contribute.\n\n\n"},{"id":5,"url":"/doc/ros2/Features/","title":"Features Status","content":"\nFeatures Status¶\nThe features listed below are available in the current ROS 2 release.\nUnless otherwise specified, the features are available for all supported platforms (Ubuntu 18.04, OS X 10.12.x, Windows 10), DDS implementations (eProsima Fast RTPS, RTI Connext and ADLINK Opensplice) and programming language client libraries (C++ and Python).\nFor planned future development, see the Roadmap.\n\n\n\n\n\n\n\nFunctionality\nLink\nFine print\n\n\n\nDiscovery, transport and serialization over DDS\nArticle\n\n\nSupport for multiple DDS implementations, chosen at runtime\nTutorials\nCurrently eProsima Fast RTPS, RTI Connext and ADLINK OpenSplice are fully supported.\n\nCommon core client library that is wrapped by language-specific libraries\nDetails\n\n\nPublish/subscribe over topics\nSample code, Article\n\n\nClients and services\nSample code\n\n\nSet/retrieve parameters\nSample code\n\n\nROS 1 - ROS 2 communication bridge\nTutorial\nAvailable for topics and services, not yet available for actions.\n\nQuality of service settings for handling non-ideal networks\nDemo\n\n\nInter- and intra-process communication using the same API\nDemo\nCurrently only in C++.\n\nComposition of node components at compile-, link- or dlopen-time\nDemo\nCurrently only in C++.\n\nSupport for nodes with managed lifecycles\nDemo\nCurrently only in C++.\n\nDDS-Security support\nDemo\n\n\nCommand-line introspection tools using an extensible framework\nTutorial\n\n\nLaunch system  for coordinating multiple nodes\nTutorial\n\n\nNamespace support for nodes and topics\nArticle\n\n\nStatic remapping of ROS names\nTutorial\n\n\nDemos of an all-ROS 2 mobile robot\nDemo\n\n\nPreliminary support for real-time code\nDemo, demo\nLinux only. Not available for Fast RTPS.\n\nPreliminary support for “bare-metal” microcontrollers\nWiki\n\n\n\n\nBeside features of the platform the most impact of ROS comes from its available packages.\nThe following are a few high profile packages which are available in the latest release:\n\ngazebo_ros_pkgs\nimage_transport\nnavigation2\nrosbag2\nRQt\nRViz2\n\n\n"},{"id":6,"url":"/doc/ros2/Installation/","title":"Installation","content":"\nInstallation¶\n\n\n\nBinary packages¶\nWe provide ROS 2 binary packages for the following platforms:\n\nLinux (Ubuntu Xenial(16.04) and Ubuntu Bionic(18.04))\n\nDebian packages\n\"fat\" archive\n\n\nOS X\nWindows\n\n\n\nBuilding from source¶\nWe support building ROS 2 from source on the following platforms:\n\nLinux\nOS X\nWindows\n\n\n\n"},{"id":7,"url":"/doc/ros2/Releases/","title":"ROS 2 Releases","content":"\nROS 2 Releases¶\n\nSummary¶\nA summary of releases of ROS 2 software is listed below.\n\n\n\n\n\n\n\n\nRelease Overview\nDate\n\n\n\nCrystal Clemmys\n14 December 2018\n\nBouncy Bolson\n2 July 2018\n\nArdent Apalone\n8 December 2017\n\nbeta3\n13 September 2017\n\nbeta2\n5 July 2017\n\nbeta1\n19 December 2016\n\nalpha1-8\n31 August 2015 - 4 October 2016\n\n\n\nFor more details about each release, see the corresponding release overview.\n\n\nRelease practices¶\n\nCore packages¶\nNew ROS 2 distributions are currently released every 6 months.\nDuring the release process, Open Robotics packages what is in the ros2.repos\nfile into installables for the supported platforms.\nThese installables take the form of “fat archives” on MacOS, Windows and Linux, and additionally Debian packages are created for Linux.\nCheck the release page for a distribution for details of the supported platform versions.\nAfter the first release of a distribution, patch releases may be made that include bug fixes and platform updates (particularly on platforms with rolling dependencies like Windows and MacOS) for the distribution.\nNew features are not typically released into an existing distribution, but are saved for the next distribution.\nThe roadmap details the upcoming features that are targeted for the next distribution.\nWhile we do aim to keep the API as stable as possible, 100% API compatibility is not guaranteed between distributions.\nInternal notes on how a release is made: Release-Howto\n\n\nExternal packages¶\nPackages outside of the ros2.repos file may be released by community members\ninto a ROS 2 distribution.\nThis is currently supported for Linux Debian packages, following these instructions.\nThese packages can be released at any time during the lifecycle of a ROS 2 distribution.\n\n\n\n"}]